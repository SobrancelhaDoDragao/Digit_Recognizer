{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Spinner from '@/components/Spinner.vue';\nexport default {\n  name: 'Quadro',\n  components: {\n    Spinner\n  },\n  data() {\n    return {\n      spin: true,\n      count: 0\n    };\n  },\n  methods: {\n    async salvarCanvas() {\n      //Ativando o louder\n      this.spin = true;\n      // Obtém o elemento canvas\n      const canvas = this.$refs.canvas;\n\n      // Obtém o objeto de contexto do canvas\n      const ctx = canvas.getContext('2d');\n      let DataUrl = canvas.toDataURL('image/png');\n      const csrfToken = await this.GetToken();\n\n      // Enviar o DataURL(Binário da imagem) para o servidor usando Fetch    \n      const reponse = await fetch('http://127.0.0.1:8000/PredictDigit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        body: JSON.stringify({\n          'data_url': DataUrl\n        })\n      });\n      //Pegando resposta do modelo de IA\n      var dado = await reponse.json();\n\n      //Desativando o louder\n      this.spin = false;\n      //Redirect\n      this.$router.push(`/PredictDigit/${dado.digit}`);\n    },\n    async GetToken() {\n      const response = await fetch('http://127.0.0.1:8000/get_csrf');\n      let dado = await response.json();\n      let csrfToken = await dado.csrf_token;\n      return csrfToken;\n    }\n  },\n  mounted() {\n    let penSize = 5;\n    let isDrawing;\n    let x;\n    let y;\n    const canvas = this.$refs.canvas;\n    const c = canvas.getContext(\"2d\");\n    const container = this.$refs.containerQuadro;\n    const sizeCanvas = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n    };\n    sizeCanvas();\n    window.addEventListener('resize', sizeCanvas);\n    canvas.addEventListener(\"mousedown\", e => {\n      isDrawing = true;\n      x = e.offsetX;\n      y = e.offsetY;\n    });\n    canvas.addEventListener(\"mouseup\", () => {\n      isDrawing = false;\n      x = undefined;\n      y = undefined;\n    });\n    canvas.addEventListener(\"mousemove\", event => {\n      draw(event.offsetX, event.offsetY);\n    });\n    c.fillStyle = \"black\";\n    c.strokeStyle = c.fillStyle;\n    function draw(x2, y2) {\n      if (isDrawing) {\n        c.beginPath();\n        c.arc(x2, y2, penSize, 0, Math.PI * 2);\n        c.closePath();\n        c.fill();\n\n        //draw line\n        drawLine(x, y, x2, y2);\n      }\n      x = x2;\n      y = y2;\n    }\n    function drawLine(x1, y1, x2, y2) {\n      c.beginPath();\n      c.moveTo(x1, y1);\n      c.lineTo(x2, y2);\n      c.strokeStyle = c.fillStyle;\n      c.lineWidth = penSize * 2;\n      c.stroke();\n    }\n  },\n  beforeUnmount() {\n    //Removendo todos os linstener para poupar memoria\n    window.removeEventListener('resize', this.sizeCanvas);\n    window.removeEventListener('mousedown', this.canvas);\n    window.removeEventListener('mouseup', this.canvas);\n    window.removeEventListener('mousemove', this.canvas);\n  }\n};","map":{"version":3,"names":["Spinner","name","components","data","spin","count","methods","salvarCanvas","canvas","$refs","ctx","getContext","DataUrl","toDataURL","csrfToken","GetToken","reponse","fetch","method","headers","body","JSON","stringify","dado","json","$router","push","digit","response","csrf_token","mounted","penSize","isDrawing","x","y","c","container","containerQuadro","sizeCanvas","width","clientWidth","height","clientHeight","window","addEventListener","e","offsetX","offsetY","undefined","event","draw","fillStyle","strokeStyle","x2","y2","beginPath","arc","Math","PI","closePath","fill","drawLine","x1","y1","moveTo","lineTo","lineWidth","stroke","beforeUnmount","removeEventListener"],"sources":["/home/eudson/Documentos/Digit_recognizer/digit_recognizer/src/components/Quadro.vue"],"sourcesContent":["<template>\n\n     <div class=\"containerQuadro\" ref=\"containerQuadro\" >\n\n        <canvas ref=\"canvas\" id=\"quadro\"></canvas>\n                 \n        </div>\n        \n        <router-link @click.prevent=\"salvarCanvas\" class='BotaoComum' to=\"\">Pronto</router-link>\n        <Spinner :start=\"spin\" />\n        \n</template>\n\n\n<script>\nimport Spinner from '@/components/Spinner.vue'\n\n    export default {\n        name: 'Quadro',\n        components: {\n            Spinner        \n        },\n\n        data(){\n            return{\n                spin:true,\n                count: 0\n            }\n        },\n\n        methods:{\n\n            async salvarCanvas() {\n            //Ativando o louder\n            this.spin = true\n            // Obtém o elemento canvas\n            const canvas = this.$refs.canvas;\n            \n            // Obtém o objeto de contexto do canvas\n            const ctx = canvas.getContext('2d');\n             \n            \n            let DataUrl = canvas.toDataURL('image/png')\n\n            const csrfToken = await this.GetToken();\n            \n            // Enviar o DataURL(Binário da imagem) para o servidor usando Fetch    \n            const reponse = await fetch('http://127.0.0.1:8000/PredictDigit', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrfToken,\n                },\n                body: JSON.stringify({'data_url': DataUrl}),\n            });\n            //Pegando resposta do modelo de IA\n            var dado = await reponse.json()\n\n            //Desativando o louder\n            this.spin = false\n            //Redirect\n            this.$router.push(`/PredictDigit/${dado.digit}`)\n \n        },\n\n        async GetToken(){\n\n            const response = await fetch('http://127.0.0.1:8000/get_csrf');\n             \n            let dado = await response.json();\n\n            let csrfToken = await dado.csrf_token;\n\n            return csrfToken;\n\n        }\n    },\n        mounted() {\n\n            let penSize = 5\n            let isDrawing;\n            let x;\n            let y;\n            \n            const canvas = this.$refs.canvas;\n            const c = canvas.getContext(\"2d\");\n            const container = this.$refs.containerQuadro;\n\n            const sizeCanvas = () => {\n                canvas.width = container.clientWidth;\n                canvas.height = container.clientHeight;\n            }\n\n            sizeCanvas();\n            \n            window.addEventListener('resize',sizeCanvas);\n            \n            canvas.addEventListener(\"mousedown\",(e)=>{\n                isDrawing = true;\n                x = e.offsetX;\n                y = e.offsetY;\n            });\n            \n            canvas.addEventListener(\"mouseup\",()=>{\n            isDrawing = false;\n            x = undefined;\n            y = undefined;\n            })\n            \n            canvas.addEventListener(\"mousemove\",(event)=>{\n            draw(event.offsetX,event.offsetY)\n            })\n            \n            c.fillStyle = \"black\"\n            c.strokeStyle = c.fillStyle\n            \n            function draw(x2,y2){\n            if(isDrawing){\n                c.beginPath();\n                c.arc(x2,y2,penSize,0,Math.PI * 2);\n                c.closePath();\n                c.fill();\n            \n                //draw line\n                drawLine(x,y,x2,y2);\n            }\n            \n            x = x2;\n            y = y2;\n            }\n            \n            function drawLine(x1,y1,x2,y2){\n            c.beginPath();\n            c.moveTo(x1,y1);\n            c.lineTo(x2,y2);\n            c.strokeStyle = c.fillStyle;\n            c.lineWidth = penSize * 2;\n            c.stroke();\n            }\n        },\n\n        beforeUnmount(){\n            //Removendo todos os linstener para poupar memoria\n            window.removeEventListener('resize', this.sizeCanvas);\n            window.removeEventListener('mousedown', this.canvas);\n            window.removeEventListener('mouseup', this.canvas);\n            window.removeEventListener('mousemove', this.canvas);\n        }\n        \n    }\n\n</script>\n"],"mappings":";AAeA,OAAOA,OAAM,MAAO,0BAAyB;AAEzC,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRF;EACJ,CAAC;EAEDG,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,IAAI,EAAC,IAAI;MACTC,KAAK,EAAE;IACX;EACJ,CAAC;EAEDC,OAAO,EAAC;IAEJ,MAAMC,YAAYA,CAAA,EAAG;MACrB;MACA,IAAI,CAACH,IAAG,GAAI,IAAG;MACf;MACA,MAAMI,MAAK,GAAI,IAAI,CAACC,KAAK,CAACD,MAAM;;MAEhC;MACA,MAAME,GAAE,GAAIF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MAGnC,IAAIC,OAAM,GAAIJ,MAAM,CAACK,SAAS,CAAC,WAAW;MAE1C,MAAMC,SAAQ,GAAI,MAAM,IAAI,CAACC,QAAQ,EAAE;;MAEvC;MACA,MAAMC,OAAM,GAAI,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEL;QACnB,CAAC;QACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAC,UAAU,EAAEV;QAAO,CAAC;MAC9C,CAAC,CAAC;MACF;MACA,IAAIW,IAAG,GAAI,MAAMP,OAAO,CAACQ,IAAI,EAAC;;MAE9B;MACA,IAAI,CAACpB,IAAG,GAAI,KAAI;MAChB;MACA,IAAI,CAACqB,OAAO,CAACC,IAAI,CAAE,iBAAgBH,IAAI,CAACI,KAAM,EAAC;IAEnD,CAAC;IAED,MAAMZ,QAAQA,CAAA,EAAE;MAEZ,MAAMa,QAAO,GAAI,MAAMX,KAAK,CAAC,gCAAgC,CAAC;MAE9D,IAAIM,IAAG,GAAI,MAAMK,QAAQ,CAACJ,IAAI,EAAE;MAEhC,IAAIV,SAAQ,GAAI,MAAMS,IAAI,CAACM,UAAU;MAErC,OAAOf,SAAS;IAEpB;EACJ,CAAC;EACGgB,OAAOA,CAAA,EAAG;IAEN,IAAIC,OAAM,GAAI;IACd,IAAIC,SAAS;IACb,IAAIC,CAAC;IACL,IAAIC,CAAC;IAEL,MAAM1B,MAAK,GAAI,IAAI,CAACC,KAAK,CAACD,MAAM;IAChC,MAAM2B,CAAA,GAAI3B,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACjC,MAAMyB,SAAQ,GAAI,IAAI,CAAC3B,KAAK,CAAC4B,eAAe;IAE5C,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACrB9B,MAAM,CAAC+B,KAAI,GAAIH,SAAS,CAACI,WAAW;MACpChC,MAAM,CAACiC,MAAK,GAAIL,SAAS,CAACM,YAAY;IAC1C;IAEAJ,UAAU,EAAE;IAEZK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAACN,UAAU,CAAC;IAE5C9B,MAAM,CAACoC,gBAAgB,CAAC,WAAW,EAAEC,CAAC,IAAG;MACrCb,SAAQ,GAAI,IAAI;MAChBC,CAAA,GAAIY,CAAC,CAACC,OAAO;MACbZ,CAAA,GAAIW,CAAC,CAACE,OAAO;IACjB,CAAC,CAAC;IAEFvC,MAAM,CAACoC,gBAAgB,CAAC,SAAS,EAAC,MAAI;MACtCZ,SAAQ,GAAI,KAAK;MACjBC,CAAA,GAAIe,SAAS;MACbd,CAAA,GAAIc,SAAS;IACb,CAAC;IAEDxC,MAAM,CAACoC,gBAAgB,CAAC,WAAW,EAAEK,KAAK,IAAG;MAC7CC,IAAI,CAACD,KAAK,CAACH,OAAO,EAACG,KAAK,CAACF,OAAO;IAChC,CAAC;IAEDZ,CAAC,CAACgB,SAAQ,GAAI,OAAM;IACpBhB,CAAC,CAACiB,WAAU,GAAIjB,CAAC,CAACgB,SAAQ;IAE1B,SAASD,IAAIA,CAACG,EAAE,EAACC,EAAE,EAAC;MACpB,IAAGtB,SAAS,EAAC;QACTG,CAAC,CAACoB,SAAS,EAAE;QACbpB,CAAC,CAACqB,GAAG,CAACH,EAAE,EAACC,EAAE,EAACvB,OAAO,EAAC,CAAC,EAAC0B,IAAI,CAACC,EAAC,GAAI,CAAC,CAAC;QAClCvB,CAAC,CAACwB,SAAS,EAAE;QACbxB,CAAC,CAACyB,IAAI,EAAE;;QAER;QACAC,QAAQ,CAAC5B,CAAC,EAACC,CAAC,EAACmB,EAAE,EAACC,EAAE,CAAC;MACvB;MAEArB,CAAA,GAAIoB,EAAE;MACNnB,CAAA,GAAIoB,EAAE;IACN;IAEA,SAASO,QAAQA,CAACC,EAAE,EAACC,EAAE,EAACV,EAAE,EAACC,EAAE,EAAC;MAC9BnB,CAAC,CAACoB,SAAS,EAAE;MACbpB,CAAC,CAAC6B,MAAM,CAACF,EAAE,EAACC,EAAE,CAAC;MACf5B,CAAC,CAAC8B,MAAM,CAACZ,EAAE,EAACC,EAAE,CAAC;MACfnB,CAAC,CAACiB,WAAU,GAAIjB,CAAC,CAACgB,SAAS;MAC3BhB,CAAC,CAAC+B,SAAQ,GAAInC,OAAM,GAAI,CAAC;MACzBI,CAAC,CAACgC,MAAM,EAAE;IACV;EACJ,CAAC;EAEDC,aAAaA,CAAA,EAAE;IACX;IACAzB,MAAM,CAAC0B,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC/B,UAAU,CAAC;IACrDK,MAAM,CAAC0B,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC7D,MAAM,CAAC;IACpDmC,MAAM,CAAC0B,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC7D,MAAM,CAAC;IAClDmC,MAAM,CAAC0B,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC7D,MAAM,CAAC;EACxD;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}