{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"containerQuadro\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"quadro\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/home/eudson/Documentos/digit_recognizer/src/components/Quadro.vue"],"sourcesContent":["<template>\n     <div class=\"containerQuadro\">\n        <canvas id=\"quadro\"></canvas>\n        </div>\n</template>\n\n\n<script>\n\nlet penSize = 5\nlet isDrawing;\nlet x;\nlet y;\n\n\nvar canvas = document.querySelector(\"canvas\");\nc = canvas.getContext(\"2d\");\n\nsizeCanvas();\n\nfunction sizeCanvas(){\n    \n    container = document.querySelector(\".containerQuadro\")\n\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n}\n\naddEventListener(\"resize\", sizeCanvas); \n\ncanvas.addEventListener(\"mousedown\",(e)=>{\n    isDrawing = true;\n    x = e.offsetX;\n    y = e.offsetY;\n\n});\n\ncanvas.addEventListener(\"mouseup\",()=>{\n    isDrawing = false;\n    x = undefined;\n    y = undefined;\n})\n\ncanvas.addEventListener(\"mousemove\",(event)=>{\n    \n    draw(event.offsetX,event.offsetY)\n})\n\nc.fillStyle = \"black\"\nc.strokeStyle = c.fillStyle\n\nfunction draw(x2,y2){\n    if(isDrawing){\n        c.beginPath();\n        c.arc(x2,y2,penSize,0,Math.PI * 2);\n        c.closePath();\n        c.fill();\n\n        //draw line\n        drawLine(x,y,x2,y2);\n    }\n\n    x = x2;\n    y = y2;\n\n   \n}\n\nfunction drawLine(x1,y1,x2,y2){\n    c.beginPath();\n    c.moveTo(x1,y1);\n    c.lineTo(x2,y2);\n    c.strokeStyle = c.fillStyle;\n    c.lineWidth = penSize * 2;\n    c.stroke();\n}\n\n</script>"],"mappings":";;EACUA,KAAK,EAAC;AAAiB;gCACzBC,mBAAA,CAA6B;EAArBC,EAAE,EAAC;AAAQ;oBAAnBC,UAA6B,C;;uBADhCC,mBAAA,CAES,OAFTC,UAES,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}