{"ast":null,"code":"export default {\n  data() {\n    return {\n      csrfToken: null\n    };\n  },\n  methods: {\n    async getCsrfToken() {\n      const response = await fetch('/get_csrf');\n      const data = await response.json();\n      this.csrfToken = data.csrf_token;\n    },\n    async salvarCanvas() {\n      // Obtém o elemento canvas\n      const canvas = this.$refs.canvas;\n\n      // Obtém o objeto de contexto do canvas\n      const ctx = canvas.getContext('2d');\n      const csrftoken = document.querySelector('[name=csrfmiddlewaretoken]').value;\n\n      // Cria um novo objeto FormData e adiciona o valor da imagem \n      const formData = new FormData();\n      let DataUrl = canvas.toDataURL('image/png');\n\n      // Enviar o DataURL para o servidor usando Fetch\n      fetch('http://127.0.0.1:8000/SalvarImagem', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          data_url: DataUrl\n        })\n      }).then(response => {\n        console.log('Sucesso!');\n      }).catch(error => {\n        console.error('Erro:', error);\n      });\n    }\n  },\n  mounted() {\n    let penSize = 5;\n    let isDrawing;\n    let x;\n    let y;\n    const canvas = this.$refs.canvas;\n    const c = canvas.getContext(\"2d\");\n    const sizeCanvas = () => {\n      const container = this.$refs.containerQuadro;\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n    };\n    sizeCanvas();\n    addEventListener(\"resize\", sizeCanvas);\n    canvas.addEventListener(\"mousedown\", e => {\n      isDrawing = true;\n      x = e.offsetX;\n      y = e.offsetY;\n    });\n    canvas.addEventListener(\"mouseup\", () => {\n      isDrawing = false;\n      x = undefined;\n      y = undefined;\n    });\n    canvas.addEventListener(\"mousemove\", event => {\n      draw(event.offsetX, event.offsetY);\n    });\n    c.fillStyle = \"black\";\n    c.strokeStyle = c.fillStyle;\n    function draw(x2, y2) {\n      if (isDrawing) {\n        c.beginPath();\n        c.arc(x2, y2, penSize, 0, Math.PI * 2);\n        c.closePath();\n        c.fill();\n\n        //draw line\n        drawLine(x, y, x2, y2);\n      }\n      x = x2;\n      y = y2;\n    }\n    function drawLine(x1, y1, x2, y2) {\n      c.beginPath();\n      c.moveTo(x1, y1);\n      c.lineTo(x2, y2);\n      c.strokeStyle = c.fillStyle;\n      c.lineWidth = penSize * 2;\n      c.stroke();\n    }\n  }\n};","map":{"version":3,"names":["data","csrfToken","methods","getCsrfToken","response","fetch","json","csrf_token","salvarCanvas","canvas","$refs","ctx","getContext","csrftoken","document","querySelector","value","formData","FormData","DataUrl","toDataURL","method","headers","body","JSON","stringify","data_url","then","console","log","catch","error","mounted","penSize","isDrawing","x","y","c","sizeCanvas","container","containerQuadro","width","clientWidth","height","clientHeight","addEventListener","e","offsetX","offsetY","undefined","event","draw","fillStyle","strokeStyle","x2","y2","beginPath","arc","Math","PI","closePath","fill","drawLine","x1","y1","moveTo","lineTo","lineWidth","stroke"],"sources":["/home/eudson/Documentos/digit_recognizer/src/components/Quadro.vue"],"sourcesContent":["<template>\n\n     <div class=\"containerQuadro\" ref=\"containerQuadro\" >\n        <canvas ref=\"canvas\" id=\"quadro\"></canvas>\n                 \n        </div>\n        <a href=\"\" @click.prevent=\"salvarCanvas\" id=\"btnSalvar\" class=\"BotaoComum\">Pronto</a>\n</template>\n\n\n<script>\n\n    export default {\n        \n        data(){\n            return {\n            csrfToken: null,\n            };\n        },\n        \n        methods:{\n\n            async getCsrfToken() {\n\n            const response = await fetch('/get_csrf');\n\n            const data = await response.json();\n            this.csrfToken = data.csrf_token;\n            },\n\n            async salvarCanvas() {\n            // Obtém o elemento canvas\n            const canvas = this.$refs.canvas;\n            \n            // Obtém o objeto de contexto do canvas\n            const ctx = canvas.getContext('2d');\n             \n            const csrftoken = document.querySelector('[name=csrfmiddlewaretoken]').value;\n            \n            // Cria um novo objeto FormData e adiciona o valor da imagem \n            const formData = new FormData();\n            \n            let DataUrl = canvas.toDataURL('image/png')\n        \n             // Enviar o DataURL para o servidor usando Fetch\n            fetch('http://127.0.0.1:8000/SalvarImagem', {\n                method: 'POST',\n                headers: {\n                \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({data_url: DataUrl}),\n            })\n            .then(response => {\n                console.log('Sucesso!');\n            })\n            .catch(error => {\n                console.error('Erro:', error);\n            });\n\n        }\n    },\n        mounted() {\n\n            let penSize = 5\n            let isDrawing;\n            let x;\n            let y;\n            \n            const canvas = this.$refs.canvas;\n            const c = canvas.getContext(\"2d\");\n            \n            const sizeCanvas = () => {\n                const container = this.$refs.containerQuadro;\n                canvas.width = container.clientWidth;\n                canvas.height = container.clientHeight;\n            }\n\n            sizeCanvas();\n            \n            addEventListener(\"resize\", sizeCanvas); \n            \n            canvas.addEventListener(\"mousedown\",(e)=>{\n                isDrawing = true;\n                x = e.offsetX;\n                y = e.offsetY;\n            });\n            \n            canvas.addEventListener(\"mouseup\",()=>{\n            isDrawing = false;\n            x = undefined;\n            y = undefined;\n            })\n            \n            canvas.addEventListener(\"mousemove\",(event)=>{\n            draw(event.offsetX,event.offsetY)\n            })\n            \n            c.fillStyle = \"black\"\n            c.strokeStyle = c.fillStyle\n            \n            function draw(x2,y2){\n            if(isDrawing){\n                c.beginPath();\n                c.arc(x2,y2,penSize,0,Math.PI * 2);\n                c.closePath();\n                c.fill();\n            \n                //draw line\n                drawLine(x,y,x2,y2);\n            }\n            \n            x = x2;\n            y = y2;\n            }\n            \n            function drawLine(x1,y1,x2,y2){\n            c.beginPath();\n            c.moveTo(x1,y1);\n            c.lineTo(x2,y2);\n            c.strokeStyle = c.fillStyle;\n            c.lineWidth = penSize * 2;\n            c.stroke();\n            }\n        }\n    }\n\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}